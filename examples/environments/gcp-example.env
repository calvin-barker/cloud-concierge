##########################################################################################
# For details on each environment variables, see the cloud-concierge documentation at
# https://docs.cloudconcierge.io # TODO:
##########################################################################################
# For Azure, a cloud division corresponds to a GCP project. Only read-only permissions should be granted.
DRAGONDROP_DIVISIONCLOUDCREDENTIALS=my-cloud-division:{"type": "service_account","project_id": "my-project","private_key_id": "","private_key": "","client_email": "email@my-project.iam.gserviceaccount.com",  "client_id": "",  "auth_uri": "https://accounts.google.com/o/oauth2/auth",  "token_uri": "https://oauth2.googleapis.com/token",  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",  "client_x509_cert_url": "https://www.googleapis.com/....iam.gserviceaccount.com"}

# Terraform configuration
DRAGONDROP_PROVIDERS=google:~>4.27.0
DRAGONDROP_TERRAFORMVERSION=1.5.0
DRAGONDROP_WORKSPACEDIRECTORIES=/path/to/one/state/file/directory/,/path/to/second/state/file/directory/

## Terraform resource subsets, for a list of supported resources, see https://docs.cloudconcierge.io/ # TODO
DRAGONDROP_RESOURCESWHITELIST=["google_storage_bucket"]
#### DRAGONDROP_RESOURCESBLACKLIST=["google_storage_bucket"]

# Terraform State Backend Management # TODO: Needs updates to reflect new state backend management options
DRAGONDROP_STATEBACKEND=TerraformCloud

#### If using TerraformCloud as the state backend, the following variables are required
DRAGONDROP_TERRAFORMCLOUDORGANIZATION=my-terraform-cloud-org
DRAGONDROP_TERRAFORMCLOUDTOKEN=my-terraform-cloud-token

# Version Control System Config
DRAGONDROP_VCSTOKEN=ghp_my-personal-access-token
DRAGONDROP_VCSUSER=UserAccountAssociatedWithPersonalAccessToken
DRAGONDROP_VCSREPO=https://github.com/my-org/my-repo.git
DRAGONDROP_VCSSYSTEM=github
DRAGONDROP_VCSBASEBRANCH=dev
DRAGONDROP_PULLREVIEWERS=NoReviewer

# Infracost
DRAGONDROP_INFRACOSTAPITOKEN=ico-my-infracost-token

# Obtain your org token by registering at https://app.dragondrop.cloud/
DRAGONDROP_ORGTOKEN=cco-my-org-token

# Only needed to reflect a real bucket if both running with Terraform < 1.5.0 and wanting to use
# our GitHub Action for running the import statements programatically
# https://github.com/dragondrop-cloud/github-action-tfstate-migration
DRAGONDROP_MIGRATIONHISTORYSTORAGE={"storageType":"Google Storage Bucket","bucket":"my-bucket","region":"us-east4"}
